// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.test.js renders correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <AddEvent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": AddEvent {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="addEvent__container"
                  >
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Type:
                                                      </label>
                                                      <select
                                                                        class="addEvent__typeDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Jerk"
                                                                        >
                                                                                          Jerk
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Long Cycle"
                                                                        >
                                                                                          Long Cycle
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Snatch"
                                                                        >
                                                                                          Snatch
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Duration:
                                                      </label>
                                                      <select
                                                                        class="addEvent__durationDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="5min"
                                                                        >
                                                                                          5 Minutes
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="10min"
                                                                        >
                                                                                          10 Minutes
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__buttonContainer"
                                    >
                                                      <button>
                                                                        Add Event
                                                      </button>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="addEvent__container"
                >
                                <div
                                                class="addEvent__dropdownContainer"
                                >
                                                <label
                                                                class="addEvent__label"
                                                >
                                                                Event Type:
                                                </label>
                                                <select
                                                                class="addEvent__typeDropdown"
                                                >
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value=""
                                                                >
                                                                                Select
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="Jerk"
                                                                >
                                                                                Jerk
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="Long Cycle"
                                                                >
                                                                                Long Cycle
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="Snatch"
                                                                >
                                                                                Snatch
                                                                </option>
                                                </select>
                                </div>
                                <div
                                                class="addEvent__dropdownContainer"
                                >
                                                <label
                                                                class="addEvent__label"
                                                >
                                                                Event Duration:
                                                </label>
                                                <select
                                                                class="addEvent__durationDropdown"
                                                >
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value=""
                                                                >
                                                                                Select
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="5min"
                                                                >
                                                                                5 Minutes
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="10min"
                                                                >
                                                                                10 Minutes
                                                                </option>
                                                </select>
                                </div>
                                <div
                                                class="addEvent__buttonContainer"
                                >
                                                <button>
                                                                Add Event
                                                </button>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
            "lineNumber": 25,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
              "lineNumber": 26,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 55,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                "lineNumber": 27,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Event Type:",
                "className": "addEvent__label",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Event Type:",
                "className": "addEvent__label",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                  "lineNumber": 28,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 57,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Select",
                    "className": "addEvent__typeOption",
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Select",
                    "className": "addEvent__typeOption",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 58,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                      "lineNumber": 32,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Jerk",
                      "className": "addEvent__typeOption",
                      "value": "Jerk",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Jerk",
                      "className": "addEvent__typeOption",
                      "value": "Jerk",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 59,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                        "lineNumber": 33,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Long Cycle",
                        "className": "addEvent__typeOption",
                        "value": "Long Cycle",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Long Cycle",
                        "className": "addEvent__typeOption",
                        "value": "Long Cycle",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                          "lineNumber": 34,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Snatch",
                          "className": "addEvent__typeOption",
                          "value": "Snatch",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Snatch",
                          "className": "addEvent__typeOption",
                          "value": "Snatch",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <option
                          class="addEvent__typeOption"
                          value="Snatch"
>
                          Snatch
</option>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option
                        class="addEvent__typeOption"
                        value="Long Cycle"
>
                        Long Cycle
</option>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option
                      class="addEvent__typeOption"
                      value="Jerk"
>
                      Jerk
</option>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "stateNode": <option
                    class="addEvent__typeOption"
                    value=""
>
                    Select
</option>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "option",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <option
                      className="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Jerk"
>
                      Jerk
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Long Cycle"
>
                      Long Cycle
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Snatch"
>
                      Snatch
</option>,
                  ],
                  "className": "addEvent__typeDropdown",
                  "onChange": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <option
                      className="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Jerk"
>
                      Jerk
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Long Cycle"
>
                      Long Cycle
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Snatch"
>
                      Snatch
</option>,
                  ],
                  "className": "addEvent__typeDropdown",
                  "onChange": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <select
                  class="addEvent__typeDropdown"
>
                  <option
                                    class="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="Jerk"
                  >
                                    Jerk
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="Long Cycle"
                  >
                                    Long Cycle
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="Snatch"
                  >
                                    Snatch
                  </option>
</select>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "select",
                "updateQueue": null,
              },
              "stateNode": <label
                class="addEvent__label"
>
                Event Type:
</label>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "label",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <label
                  className="addEvent__label"
>
                  Event Type:
</label>,
                <select
                  className="addEvent__typeDropdown"
                  onChange={[Function]}
>
                  <option
                                    className="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Jerk"
                  >
                                    Jerk
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Long Cycle"
                  >
                                    Long Cycle
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Snatch"
                  >
                                    Snatch
                  </option>
</select>,
              ],
              "className": "addEvent__dropdownContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <label
                  className="addEvent__label"
>
                  Event Type:
</label>,
                <select
                  className="addEvent__typeDropdown"
                  onChange={[Function]}
>
                  <option
                                    className="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Jerk"
                  >
                                    Jerk
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Long Cycle"
                  >
                                    Long Cycle
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Snatch"
                  >
                                    Snatch
                  </option>
</select>,
              ],
              "className": "addEvent__dropdownContainer",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                "lineNumber": 37,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 61,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                  "lineNumber": 38,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Event Duration:",
                  "className": "addEvent__label",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Event Duration:",
                  "className": "addEvent__label",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 62,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                    "lineNumber": 39,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 63,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                      "lineNumber": 42,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Select",
                      "className": "addEvent__typeOption",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Select",
                      "className": "addEvent__typeOption",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 64,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                        "lineNumber": 43,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "5 Minutes",
                        "className": "addEvent__typeOption",
                        "value": "5min",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "5 Minutes",
                        "className": "addEvent__typeOption",
                        "value": "5min",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                          "lineNumber": 44,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "10 Minutes",
                          "className": "addEvent__typeOption",
                          "value": "10min",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "10 Minutes",
                          "className": "addEvent__typeOption",
                          "value": "10min",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <option
                          class="addEvent__typeOption"
                          value="10min"
>
                          10 Minutes
</option>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option
                        class="addEvent__typeOption"
                        value="5min"
>
                        5 Minutes
</option>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option
                      class="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <option
                        className="addEvent__typeOption"
                        value=""
>
                        Select
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="5min"
>
                        5 Minutes
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="10min"
>
                        10 Minutes
</option>,
                    ],
                    "className": "addEvent__durationDropdown",
                    "onChange": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <option
                        className="addEvent__typeOption"
                        value=""
>
                        Select
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="5min"
>
                        5 Minutes
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="10min"
>
                        10 Minutes
</option>,
                    ],
                    "className": "addEvent__durationDropdown",
                    "onChange": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <select
                    class="addEvent__durationDropdown"
>
                    <option
                                        class="addEvent__typeOption"
                                        value=""
                    >
                                        Select
                    </option>
                    <option
                                        class="addEvent__typeOption"
                                        value="5min"
                    >
                                        5 Minutes
                    </option>
                    <option
                                        class="addEvent__typeOption"
                                        value="10min"
                    >
                                        10 Minutes
                    </option>
</select>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "select",
                  "updateQueue": null,
                },
                "stateNode": <label
                  class="addEvent__label"
>
                  Event Duration:
</label>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "label",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <label
                    className="addEvent__label"
>
                    Event Duration:
</label>,
                  <select
                    className="addEvent__durationDropdown"
                    onChange={[Function]}
>
                    <option
                                        className="addEvent__typeOption"
                                        value=""
                    >
                                        Select
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="5min"
                    >
                                        5 Minutes
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="10min"
                    >
                                        10 Minutes
                    </option>
</select>,
                ],
                "className": "addEvent__dropdownContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <label
                    className="addEvent__label"
>
                    Event Duration:
</label>,
                  <select
                    className="addEvent__durationDropdown"
                    onChange={[Function]}
>
                    <option
                                        className="addEvent__typeOption"
                                        value=""
                    >
                                        Select
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="5min"
                    >
                                        5 Minutes
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="10min"
                    >
                                        10 Minutes
                    </option>
</select>,
                ],
                "className": "addEvent__dropdownContainer",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                  "lineNumber": 47,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 66,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                    "lineNumber": 48,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Add Event",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Add Event",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <button>
                    Add Event
</button>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <button
                    onClick={[Function]}
>
                    Add Event
</button>,
                  "className": "addEvent__buttonContainer",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <button
                    onClick={[Function]}
>
                    Add Event
</button>,
                  "className": "addEvent__buttonContainer",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="addEvent__buttonContainer"
>
                  <button>
                                    Add Event
                  </button>
</div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="addEvent__dropdownContainer"
>
                <label
                                class="addEvent__label"
                >
                                Event Duration:
                </label>
                <select
                                class="addEvent__durationDropdown"
                >
                                <option
                                                class="addEvent__typeOption"
                                                value=""
                                >
                                                Select
                                </option>
                                <option
                                                class="addEvent__typeOption"
                                                value="5min"
                                >
                                                5 Minutes
                                </option>
                                <option
                                                class="addEvent__typeOption"
                                                value="10min"
                                >
                                                10 Minutes
                                </option>
                </select>
</div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": <div
              class="addEvent__dropdownContainer"
>
              <label
                            class="addEvent__label"
              >
                            Event Type:
              </label>
              <select
                            class="addEvent__typeDropdown"
              >
                            <option
                                          class="addEvent__typeOption"
                                          value=""
                            >
                                          Select
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="Jerk"
                            >
                                          Jerk
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="Long Cycle"
                            >
                                          Long Cycle
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="Snatch"
                            >
                                          Snatch
                            </option>
              </select>
</div>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div
                className="addEvent__dropdownContainer"
>
                <label
                                className="addEvent__label"
                >
                                Event Type:
                </label>
                <select
                                className="addEvent__typeDropdown"
                                onChange={[Function]}
                >
                                <option
                                                className="addEvent__typeOption"
                                                value=""
                                >
                                                Select
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="Jerk"
                                >
                                                Jerk
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="Long Cycle"
                                >
                                                Long Cycle
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="Snatch"
                                >
                                                Snatch
                                </option>
                </select>
</div>,
              <div
                className="addEvent__dropdownContainer"
>
                <label
                                className="addEvent__label"
                >
                                Event Duration:
                </label>
                <select
                                className="addEvent__durationDropdown"
                                onChange={[Function]}
                >
                                <option
                                                className="addEvent__typeOption"
                                                value=""
                                >
                                                Select
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="5min"
                                >
                                                5 Minutes
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="10min"
                                >
                                                10 Minutes
                                </option>
                </select>
</div>,
              <div
                className="addEvent__buttonContainer"
>
                <button
                                onClick={[Function]}
                >
                                Add Event
                </button>
</div>,
            ],
            "className": "addEvent__container",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <div
                className="addEvent__dropdownContainer"
>
                <label
                                className="addEvent__label"
                >
                                Event Type:
                </label>
                <select
                                className="addEvent__typeDropdown"
                                onChange={[Function]}
                >
                                <option
                                                className="addEvent__typeOption"
                                                value=""
                                >
                                                Select
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="Jerk"
                                >
                                                Jerk
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="Long Cycle"
                                >
                                                Long Cycle
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="Snatch"
                                >
                                                Snatch
                                </option>
                </select>
</div>,
              <div
                className="addEvent__dropdownContainer"
>
                <label
                                className="addEvent__label"
                >
                                Event Duration:
                </label>
                <select
                                className="addEvent__durationDropdown"
                                onChange={[Function]}
                >
                                <option
                                                className="addEvent__typeOption"
                                                value=""
                                >
                                                Select
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="5min"
                                >
                                                5 Minutes
                                </option>
                                <option
                                                className="addEvent__typeOption"
                                                value="10min"
                                >
                                                10 Minutes
                                </option>
                </select>
</div>,
              <div
                className="addEvent__buttonContainer"
>
                <button
                                onClick={[Function]}
                >
                                Add Event
                </button>
</div>,
            ],
            "className": "addEvent__container",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="addEvent__container"
>
            <div
                        class="addEvent__dropdownContainer"
            >
                        <label
                                    class="addEvent__label"
                        >
                                    Event Type:
                        </label>
                        <select
                                    class="addEvent__typeDropdown"
                        >
                                    <option
                                                class="addEvent__typeOption"
                                                value=""
                                    >
                                                Select
                                    </option>
                                    <option
                                                class="addEvent__typeOption"
                                                value="Jerk"
                                    >
                                                Jerk
                                    </option>
                                    <option
                                                class="addEvent__typeOption"
                                                value="Long Cycle"
                                    >
                                                Long Cycle
                                    </option>
                                    <option
                                                class="addEvent__typeOption"
                                                value="Snatch"
                                    >
                                                Snatch
                                    </option>
                        </select>
            </div>
            <div
                        class="addEvent__dropdownContainer"
            >
                        <label
                                    class="addEvent__label"
                        >
                                    Event Duration:
                        </label>
                        <select
                                    class="addEvent__durationDropdown"
                        >
                                    <option
                                                class="addEvent__typeOption"
                                                value=""
                                    >
                                                Select
                                    </option>
                                    <option
                                                class="addEvent__typeOption"
                                                value="5min"
                                    >
                                                5 Minutes
                                    </option>
                                    <option
                                                class="addEvent__typeOption"
                                                value="10min"
                                    >
                                                10 Minutes
                                    </option>
                        </select>
            </div>
            <div
                        class="addEvent__buttonContainer"
            >
                        <button>
                                    Add Event
                        </button>
            </div>
</div>,
          "tag": 7,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "duration": null,
          "type": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="addEvent__container"
                  >
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Type:
                                                      </label>
                                                      <select
                                                                        class="addEvent__typeDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Jerk"
                                                                        >
                                                                                          Jerk
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Long Cycle"
                                                                        >
                                                                                          Long Cycle
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Snatch"
                                                                        >
                                                                                          Snatch
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Duration:
                                                      </label>
                                                      <select
                                                                        class="addEvent__durationDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="5min"
                                                                        >
                                                                                          5 Minutes
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="10min"
                                                                        >
                                                                                          10 Minutes
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__buttonContainer"
                                    >
                                                      <button>
                                                                        Add Event
                                                      </button>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="addEvent__container"
                >
                                <div
                                                class="addEvent__dropdownContainer"
                                >
                                                <label
                                                                class="addEvent__label"
                                                >
                                                                Event Type:
                                                </label>
                                                <select
                                                                class="addEvent__typeDropdown"
                                                >
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value=""
                                                                >
                                                                                Select
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="Jerk"
                                                                >
                                                                                Jerk
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="Long Cycle"
                                                                >
                                                                                Long Cycle
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="Snatch"
                                                                >
                                                                                Snatch
                                                                </option>
                                                </select>
                                </div>
                                <div
                                                class="addEvent__dropdownContainer"
                                >
                                                <label
                                                                class="addEvent__label"
                                                >
                                                                Event Duration:
                                                </label>
                                                <select
                                                                class="addEvent__durationDropdown"
                                                >
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value=""
                                                                >
                                                                                Select
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="5min"
                                                                >
                                                                                5 Minutes
                                                                </option>
                                                                <option
                                                                                class="addEvent__typeOption"
                                                                                value="10min"
                                                                >
                                                                                10 Minutes
                                                                </option>
                                                </select>
                                </div>
                                <div
                                                class="addEvent__buttonContainer"
                                >
                                                <button>
                                                                Add Event
                                                </button>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "addEvent": [Function],
      "close": [Function],
      "context": Object {},
      "handleDurationChange": [Function],
      "handleTypeChange": [Function],
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "duration": null,
        "type": null,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="addEvent__container"
>
        <div
                class="addEvent__dropdownContainer"
        >
                <label
                        class="addEvent__label"
                >
                        Event Type:
                </label>
                <select
                        class="addEvent__typeDropdown"
                >
                        <option
                                class="addEvent__typeOption"
                                value=""
                        >
                                Select
                        </option>
                        <option
                                class="addEvent__typeOption"
                                value="Jerk"
                        >
                                Jerk
                        </option>
                        <option
                                class="addEvent__typeOption"
                                value="Long Cycle"
                        >
                                Long Cycle
                        </option>
                        <option
                                class="addEvent__typeOption"
                                value="Snatch"
                        >
                                Snatch
                        </option>
                </select>
        </div>
        <div
                class="addEvent__dropdownContainer"
        >
                <label
                        class="addEvent__label"
                >
                        Event Duration:
                </label>
                <select
                        class="addEvent__durationDropdown"
                >
                        <option
                                class="addEvent__typeOption"
                                value=""
                        >
                                Select
                        </option>
                        <option
                                class="addEvent__typeOption"
                                value="5min"
                        >
                                5 Minutes
                        </option>
                        <option
                                class="addEvent__typeOption"
                                value="10min"
                        >
                                10 Minutes
                        </option>
                </select>
        </div>
        <div
                class="addEvent__buttonContainer"
        >
                <button>
                        Add Event
                </button>
        </div>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="addEvent__dropdownContainer"
>
            <label
                        className="addEvent__label"
            >
                        Event Type:
            </label>
            <select
                        className="addEvent__typeDropdown"
                        onChange={[Function]}
            >
                        <option
                                    className="addEvent__typeOption"
                                    value=""
                        >
                                    Select
                        </option>
                        <option
                                    className="addEvent__typeOption"
                                    value="Jerk"
                        >
                                    Jerk
                        </option>
                        <option
                                    className="addEvent__typeOption"
                                    value="Long Cycle"
                        >
                                    Long Cycle
                        </option>
                        <option
                                    className="addEvent__typeOption"
                                    value="Snatch"
                        >
                                    Snatch
                        </option>
            </select>
</div>,
          <div
            className="addEvent__dropdownContainer"
>
            <label
                        className="addEvent__label"
            >
                        Event Duration:
            </label>
            <select
                        className="addEvent__durationDropdown"
                        onChange={[Function]}
            >
                        <option
                                    className="addEvent__typeOption"
                                    value=""
                        >
                                    Select
                        </option>
                        <option
                                    className="addEvent__typeOption"
                                    value="5min"
                        >
                                    5 Minutes
                        </option>
                        <option
                                    className="addEvent__typeOption"
                                    value="10min"
                        >
                                    10 Minutes
                        </option>
            </select>
</div>,
          <div
            className="addEvent__buttonContainer"
>
            <button
                        onClick={[Function]}
            >
                        Add Event
            </button>
</div>,
        ],
        "className": "addEvent__container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="addEvent__dropdownContainer"
>
            <label
                        class="addEvent__label"
            >
                        Event Type:
            </label>
            <select
                        class="addEvent__typeDropdown"
            >
                        <option
                                    class="addEvent__typeOption"
                                    value=""
                        >
                                    Select
                        </option>
                        <option
                                    class="addEvent__typeOption"
                                    value="Jerk"
                        >
                                    Jerk
                        </option>
                        <option
                                    class="addEvent__typeOption"
                                    value="Long Cycle"
                        >
                                    Long Cycle
                        </option>
                        <option
                                    class="addEvent__typeOption"
                                    value="Snatch"
                        >
                                    Snatch
                        </option>
            </select>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="addEvent__label"
>
                Event Type:
</label>,
              <select
                className="addEvent__typeDropdown"
                onChange={[Function]}
>
                <option
                                className="addEvent__typeOption"
                                value=""
                >
                                Select
                </option>
                <option
                                className="addEvent__typeOption"
                                value="Jerk"
                >
                                Jerk
                </option>
                <option
                                className="addEvent__typeOption"
                                value="Long Cycle"
                >
                                Long Cycle
                </option>
                <option
                                className="addEvent__typeOption"
                                value="Snatch"
                >
                                Snatch
                </option>
</select>,
            ],
            "className": "addEvent__dropdownContainer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <label
                class="addEvent__label"
>
                Event Type:
</label>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Event Type:",
                "className": "addEvent__label",
              },
              "ref": null,
              "rendered": Array [
                "Event Type:",
              ],
              "type": "label",
            },
            Object {
              "instance": <select
                class="addEvent__typeDropdown"
>
                <option
                                class="addEvent__typeOption"
                                value=""
                >
                                Select
                </option>
                <option
                                class="addEvent__typeOption"
                                value="Jerk"
                >
                                Jerk
                </option>
                <option
                                class="addEvent__typeOption"
                                value="Long Cycle"
                >
                                Long Cycle
                </option>
                <option
                                class="addEvent__typeOption"
                                value="Snatch"
                >
                                Snatch
                </option>
</select>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    className="addEvent__typeOption"
                    value=""
>
                    Select
</option>,
                  <option
                    className="addEvent__typeOption"
                    value="Jerk"
>
                    Jerk
</option>,
                  <option
                    className="addEvent__typeOption"
                    value="Long Cycle"
>
                    Long Cycle
</option>,
                  <option
                    className="addEvent__typeOption"
                    value="Snatch"
>
                    Snatch
</option>,
                ],
                "className": "addEvent__typeDropdown",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value=""
>
                    Select
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select",
                    "className": "addEvent__typeOption",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Select",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value="Jerk"
>
                    Jerk
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Jerk",
                    "className": "addEvent__typeOption",
                    "value": "Jerk",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Jerk",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value="Long Cycle"
>
                    Long Cycle
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Long Cycle",
                    "className": "addEvent__typeOption",
                    "value": "Long Cycle",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Long Cycle",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value="Snatch"
>
                    Snatch
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Snatch",
                    "className": "addEvent__typeOption",
                    "value": "Snatch",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Snatch",
                  ],
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <div
            class="addEvent__dropdownContainer"
>
            <label
                        class="addEvent__label"
            >
                        Event Duration:
            </label>
            <select
                        class="addEvent__durationDropdown"
            >
                        <option
                                    class="addEvent__typeOption"
                                    value=""
                        >
                                    Select
                        </option>
                        <option
                                    class="addEvent__typeOption"
                                    value="5min"
                        >
                                    5 Minutes
                        </option>
                        <option
                                    class="addEvent__typeOption"
                                    value="10min"
                        >
                                    10 Minutes
                        </option>
            </select>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="addEvent__label"
>
                Event Duration:
</label>,
              <select
                className="addEvent__durationDropdown"
                onChange={[Function]}
>
                <option
                                className="addEvent__typeOption"
                                value=""
                >
                                Select
                </option>
                <option
                                className="addEvent__typeOption"
                                value="5min"
                >
                                5 Minutes
                </option>
                <option
                                className="addEvent__typeOption"
                                value="10min"
                >
                                10 Minutes
                </option>
</select>,
            ],
            "className": "addEvent__dropdownContainer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <label
                class="addEvent__label"
>
                Event Duration:
</label>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Event Duration:",
                "className": "addEvent__label",
              },
              "ref": null,
              "rendered": Array [
                "Event Duration:",
              ],
              "type": "label",
            },
            Object {
              "instance": <select
                class="addEvent__durationDropdown"
>
                <option
                                class="addEvent__typeOption"
                                value=""
                >
                                Select
                </option>
                <option
                                class="addEvent__typeOption"
                                value="5min"
                >
                                5 Minutes
                </option>
                <option
                                class="addEvent__typeOption"
                                value="10min"
                >
                                10 Minutes
                </option>
</select>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    className="addEvent__typeOption"
                    value=""
>
                    Select
</option>,
                  <option
                    className="addEvent__typeOption"
                    value="5min"
>
                    5 Minutes
</option>,
                  <option
                    className="addEvent__typeOption"
                    value="10min"
>
                    10 Minutes
</option>,
                ],
                "className": "addEvent__durationDropdown",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value=""
>
                    Select
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select",
                    "className": "addEvent__typeOption",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Select",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value="5min"
>
                    5 Minutes
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "5 Minutes",
                    "className": "addEvent__typeOption",
                    "value": "5min",
                  },
                  "ref": null,
                  "rendered": Array [
                    "5 Minutes",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    class="addEvent__typeOption"
                    value="10min"
>
                    10 Minutes
</option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "10 Minutes",
                    "className": "addEvent__typeOption",
                    "value": "10min",
                  },
                  "ref": null,
                  "rendered": Array [
                    "10 Minutes",
                  ],
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <div
            class="addEvent__buttonContainer"
>
            <button>
                        Add Event
            </button>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              onClick={[Function]}
>
              Add Event
</button>,
            "className": "addEvent__buttonContainer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <button>
                Add Event
</button>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Event",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                "Add Event",
              ],
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": AddEvent {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="addEvent__container"
                    >
                                        <div
                                                            class="addEvent__dropdownContainer"
                                        >
                                                            <label
                                                                                class="addEvent__label"
                                                            >
                                                                                Event Type:
                                                            </label>
                                                            <select
                                                                                class="addEvent__typeDropdown"
                                                            >
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value=""
                                                                                >
                                                                                                    Select
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="Jerk"
                                                                                >
                                                                                                    Jerk
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="Long Cycle"
                                                                                >
                                                                                                    Long Cycle
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="Snatch"
                                                                                >
                                                                                                    Snatch
                                                                                </option>
                                                            </select>
                                        </div>
                                        <div
                                                            class="addEvent__dropdownContainer"
                                        >
                                                            <label
                                                                                class="addEvent__label"
                                                            >
                                                                                Event Duration:
                                                            </label>
                                                            <select
                                                                                class="addEvent__durationDropdown"
                                                            >
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value=""
                                                                                >
                                                                                                    Select
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="5min"
                                                                                >
                                                                                                    5 Minutes
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="10min"
                                                                                >
                                                                                                    10 Minutes
                                                                                </option>
                                                            </select>
                                        </div>
                                        <div
                                                            class="addEvent__buttonContainer"
                                        >
                                                            <button>
                                                                                Add Event
                                                            </button>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="addEvent__container"
                  >
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Type:
                                                      </label>
                                                      <select
                                                                        class="addEvent__typeDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Jerk"
                                                                        >
                                                                                          Jerk
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Long Cycle"
                                                                        >
                                                                                          Long Cycle
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Snatch"
                                                                        >
                                                                                          Snatch
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Duration:
                                                      </label>
                                                      <select
                                                                        class="addEvent__durationDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="5min"
                                                                        >
                                                                                          5 Minutes
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="10min"
                                                                        >
                                                                                          10 Minutes
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__buttonContainer"
                                    >
                                                      <button>
                                                                        Add Event
                                                      </button>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
              "lineNumber": 25,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                "lineNumber": 26,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 55,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                  "lineNumber": 27,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Event Type:",
                  "className": "addEvent__label",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Event Type:",
                  "className": "addEvent__label",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                    "lineNumber": 28,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                      "lineNumber": 31,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Select",
                      "className": "addEvent__typeOption",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Select",
                      "className": "addEvent__typeOption",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                        "lineNumber": 32,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Jerk",
                        "className": "addEvent__typeOption",
                        "value": "Jerk",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Jerk",
                        "className": "addEvent__typeOption",
                        "value": "Jerk",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                          "lineNumber": 33,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Long Cycle",
                          "className": "addEvent__typeOption",
                          "value": "Long Cycle",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Long Cycle",
                          "className": "addEvent__typeOption",
                          "value": "Long Cycle",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                            "lineNumber": 34,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Snatch",
                            "className": "addEvent__typeOption",
                            "value": "Snatch",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Snatch",
                            "className": "addEvent__typeOption",
                            "value": "Snatch",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <option
                            class="addEvent__typeOption"
                            value="Snatch"
>
                            Snatch
</option>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option
                          class="addEvent__typeOption"
                          value="Long Cycle"
>
                          Long Cycle
</option>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option
                        class="addEvent__typeOption"
                        value="Jerk"
>
                        Jerk
</option>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option
                      class="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <option
                        className="addEvent__typeOption"
                        value=""
>
                        Select
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="Jerk"
>
                        Jerk
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="Long Cycle"
>
                        Long Cycle
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="Snatch"
>
                        Snatch
</option>,
                    ],
                    "className": "addEvent__typeDropdown",
                    "onChange": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <option
                        className="addEvent__typeOption"
                        value=""
>
                        Select
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="Jerk"
>
                        Jerk
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="Long Cycle"
>
                        Long Cycle
</option>,
                      <option
                        className="addEvent__typeOption"
                        value="Snatch"
>
                        Snatch
</option>,
                    ],
                    "className": "addEvent__typeDropdown",
                    "onChange": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <select
                    class="addEvent__typeDropdown"
>
                    <option
                                        class="addEvent__typeOption"
                                        value=""
                    >
                                        Select
                    </option>
                    <option
                                        class="addEvent__typeOption"
                                        value="Jerk"
                    >
                                        Jerk
                    </option>
                    <option
                                        class="addEvent__typeOption"
                                        value="Long Cycle"
                    >
                                        Long Cycle
                    </option>
                    <option
                                        class="addEvent__typeOption"
                                        value="Snatch"
                    >
                                        Snatch
                    </option>
</select>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "select",
                  "updateQueue": null,
                },
                "stateNode": <label
                  class="addEvent__label"
>
                  Event Type:
</label>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "label",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <label
                    className="addEvent__label"
>
                    Event Type:
</label>,
                  <select
                    className="addEvent__typeDropdown"
                    onChange={[Function]}
>
                    <option
                                        className="addEvent__typeOption"
                                        value=""
                    >
                                        Select
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="Jerk"
                    >
                                        Jerk
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="Long Cycle"
                    >
                                        Long Cycle
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="Snatch"
                    >
                                        Snatch
                    </option>
</select>,
                ],
                "className": "addEvent__dropdownContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <label
                    className="addEvent__label"
>
                    Event Type:
</label>,
                  <select
                    className="addEvent__typeDropdown"
                    onChange={[Function]}
>
                    <option
                                        className="addEvent__typeOption"
                                        value=""
                    >
                                        Select
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="Jerk"
                    >
                                        Jerk
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="Long Cycle"
                    >
                                        Long Cycle
                    </option>
                    <option
                                        className="addEvent__typeOption"
                                        value="Snatch"
                    >
                                        Snatch
                    </option>
</select>,
                ],
                "className": "addEvent__dropdownContainer",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                  "lineNumber": 37,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 61,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                    "lineNumber": 38,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Event Duration:",
                    "className": "addEvent__label",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Event Duration:",
                    "className": "addEvent__label",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 62,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                      "lineNumber": 39,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 63,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                        "lineNumber": 42,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Select",
                        "className": "addEvent__typeOption",
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Select",
                        "className": "addEvent__typeOption",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 64,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                          "lineNumber": 43,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "5 Minutes",
                          "className": "addEvent__typeOption",
                          "value": "5min",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "5 Minutes",
                          "className": "addEvent__typeOption",
                          "value": "5min",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 65,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                            "lineNumber": 44,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "10 Minutes",
                            "className": "addEvent__typeOption",
                            "value": "10min",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "10 Minutes",
                            "className": "addEvent__typeOption",
                            "value": "10min",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <option
                            class="addEvent__typeOption"
                            value="10min"
>
                            10 Minutes
</option>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option
                          class="addEvent__typeOption"
                          value="5min"
>
                          5 Minutes
</option>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option
                        class="addEvent__typeOption"
                        value=""
>
                        Select
</option>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <option
                          className="addEvent__typeOption"
                          value=""
>
                          Select
</option>,
                        <option
                          className="addEvent__typeOption"
                          value="5min"
>
                          5 Minutes
</option>,
                        <option
                          className="addEvent__typeOption"
                          value="10min"
>
                          10 Minutes
</option>,
                      ],
                      "className": "addEvent__durationDropdown",
                      "onChange": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <option
                          className="addEvent__typeOption"
                          value=""
>
                          Select
</option>,
                        <option
                          className="addEvent__typeOption"
                          value="5min"
>
                          5 Minutes
</option>,
                        <option
                          className="addEvent__typeOption"
                          value="10min"
>
                          10 Minutes
</option>,
                      ],
                      "className": "addEvent__durationDropdown",
                      "onChange": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <select
                      class="addEvent__durationDropdown"
>
                      <option
                                            class="addEvent__typeOption"
                                            value=""
                      >
                                            Select
                      </option>
                      <option
                                            class="addEvent__typeOption"
                                            value="5min"
                      >
                                            5 Minutes
                      </option>
                      <option
                                            class="addEvent__typeOption"
                                            value="10min"
                      >
                                            10 Minutes
                      </option>
</select>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "select",
                    "updateQueue": null,
                  },
                  "stateNode": <label
                    class="addEvent__label"
>
                    Event Duration:
</label>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <label
                      className="addEvent__label"
>
                      Event Duration:
</label>,
                    <select
                      className="addEvent__durationDropdown"
                      onChange={[Function]}
>
                      <option
                                            className="addEvent__typeOption"
                                            value=""
                      >
                                            Select
                      </option>
                      <option
                                            className="addEvent__typeOption"
                                            value="5min"
                      >
                                            5 Minutes
                      </option>
                      <option
                                            className="addEvent__typeOption"
                                            value="10min"
                      >
                                            10 Minutes
                      </option>
</select>,
                  ],
                  "className": "addEvent__dropdownContainer",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <label
                      className="addEvent__label"
>
                      Event Duration:
</label>,
                    <select
                      className="addEvent__durationDropdown"
                      onChange={[Function]}
>
                      <option
                                            className="addEvent__typeOption"
                                            value=""
                      >
                                            Select
                      </option>
                      <option
                                            className="addEvent__typeOption"
                                            value="5min"
                      >
                                            5 Minutes
                      </option>
                      <option
                                            className="addEvent__typeOption"
                                            value="10min"
                      >
                                            10 Minutes
                      </option>
</select>,
                  ],
                  "className": "addEvent__dropdownContainer",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                    "lineNumber": 47,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 66,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/taylorjohndrew/Dev/projects/kb-sport-ui/src/components/forms/AddEvent/AddEvent.js",
                      "lineNumber": 48,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Add Event",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Add Event",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <button>
                      Add Event
</button>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <button
                      onClick={[Function]}
>
                      Add Event
</button>,
                    "className": "addEvent__buttonContainer",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <button
                      onClick={[Function]}
>
                      Add Event
</button>,
                    "className": "addEvent__buttonContainer",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="addEvent__buttonContainer"
>
                    <button>
                                        Add Event
                    </button>
</div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="addEvent__dropdownContainer"
>
                  <label
                                    class="addEvent__label"
                  >
                                    Event Duration:
                  </label>
                  <select
                                    class="addEvent__durationDropdown"
                  >
                                    <option
                                                      class="addEvent__typeOption"
                                                      value=""
                                    >
                                                      Select
                                    </option>
                                    <option
                                                      class="addEvent__typeOption"
                                                      value="5min"
                                    >
                                                      5 Minutes
                                    </option>
                                    <option
                                                      class="addEvent__typeOption"
                                                      value="10min"
                                    >
                                                      10 Minutes
                                    </option>
                  </select>
</div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div
                class="addEvent__dropdownContainer"
>
                <label
                                class="addEvent__label"
                >
                                Event Type:
                </label>
                <select
                                class="addEvent__typeDropdown"
                >
                                <option
                                                class="addEvent__typeOption"
                                                value=""
                                >
                                                Select
                                </option>
                                <option
                                                class="addEvent__typeOption"
                                                value="Jerk"
                                >
                                                Jerk
                                </option>
                                <option
                                                class="addEvent__typeOption"
                                                value="Long Cycle"
                                >
                                                Long Cycle
                                </option>
                                <option
                                                class="addEvent__typeOption"
                                                value="Snatch"
                                >
                                                Snatch
                                </option>
                </select>
</div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="addEvent__dropdownContainer"
>
                  <label
                                    className="addEvent__label"
                  >
                                    Event Type:
                  </label>
                  <select
                                    className="addEvent__typeDropdown"
                                    onChange={[Function]}
                  >
                                    <option
                                                      className="addEvent__typeOption"
                                                      value=""
                                    >
                                                      Select
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="Jerk"
                                    >
                                                      Jerk
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="Long Cycle"
                                    >
                                                      Long Cycle
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="Snatch"
                                    >
                                                      Snatch
                                    </option>
                  </select>
</div>,
                <div
                  className="addEvent__dropdownContainer"
>
                  <label
                                    className="addEvent__label"
                  >
                                    Event Duration:
                  </label>
                  <select
                                    className="addEvent__durationDropdown"
                                    onChange={[Function]}
                  >
                                    <option
                                                      className="addEvent__typeOption"
                                                      value=""
                                    >
                                                      Select
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="5min"
                                    >
                                                      5 Minutes
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="10min"
                                    >
                                                      10 Minutes
                                    </option>
                  </select>
</div>,
                <div
                  className="addEvent__buttonContainer"
>
                  <button
                                    onClick={[Function]}
                  >
                                    Add Event
                  </button>
</div>,
              ],
              "className": "addEvent__container",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div
                  className="addEvent__dropdownContainer"
>
                  <label
                                    className="addEvent__label"
                  >
                                    Event Type:
                  </label>
                  <select
                                    className="addEvent__typeDropdown"
                                    onChange={[Function]}
                  >
                                    <option
                                                      className="addEvent__typeOption"
                                                      value=""
                                    >
                                                      Select
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="Jerk"
                                    >
                                                      Jerk
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="Long Cycle"
                                    >
                                                      Long Cycle
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="Snatch"
                                    >
                                                      Snatch
                                    </option>
                  </select>
</div>,
                <div
                  className="addEvent__dropdownContainer"
>
                  <label
                                    className="addEvent__label"
                  >
                                    Event Duration:
                  </label>
                  <select
                                    className="addEvent__durationDropdown"
                                    onChange={[Function]}
                  >
                                    <option
                                                      className="addEvent__typeOption"
                                                      value=""
                                    >
                                                      Select
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="5min"
                                    >
                                                      5 Minutes
                                    </option>
                                    <option
                                                      className="addEvent__typeOption"
                                                      value="10min"
                                    >
                                                      10 Minutes
                                    </option>
                  </select>
</div>,
                <div
                  className="addEvent__buttonContainer"
>
                  <button
                                    onClick={[Function]}
                  >
                                    Add Event
                  </button>
</div>,
              ],
              "className": "addEvent__container",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="addEvent__container"
>
              <div
                            class="addEvent__dropdownContainer"
              >
                            <label
                                          class="addEvent__label"
                            >
                                          Event Type:
                            </label>
                            <select
                                          class="addEvent__typeDropdown"
                            >
                                          <option
                                                        class="addEvent__typeOption"
                                                        value=""
                                          >
                                                        Select
                                          </option>
                                          <option
                                                        class="addEvent__typeOption"
                                                        value="Jerk"
                                          >
                                                        Jerk
                                          </option>
                                          <option
                                                        class="addEvent__typeOption"
                                                        value="Long Cycle"
                                          >
                                                        Long Cycle
                                          </option>
                                          <option
                                                        class="addEvent__typeOption"
                                                        value="Snatch"
                                          >
                                                        Snatch
                                          </option>
                            </select>
              </div>
              <div
                            class="addEvent__dropdownContainer"
              >
                            <label
                                          class="addEvent__label"
                            >
                                          Event Duration:
                            </label>
                            <select
                                          class="addEvent__durationDropdown"
                            >
                                          <option
                                                        class="addEvent__typeOption"
                                                        value=""
                                          >
                                                        Select
                                          </option>
                                          <option
                                                        class="addEvent__typeOption"
                                                        value="5min"
                                          >
                                                        5 Minutes
                                          </option>
                                          <option
                                                        class="addEvent__typeOption"
                                                        value="10min"
                                          >
                                                        10 Minutes
                                          </option>
                            </select>
              </div>
              <div
                            class="addEvent__buttonContainer"
              >
                            <button>
                                          Add Event
                            </button>
              </div>
</div>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "duration": null,
            "type": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="addEvent__container"
                    >
                                        <div
                                                            class="addEvent__dropdownContainer"
                                        >
                                                            <label
                                                                                class="addEvent__label"
                                                            >
                                                                                Event Type:
                                                            </label>
                                                            <select
                                                                                class="addEvent__typeDropdown"
                                                            >
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value=""
                                                                                >
                                                                                                    Select
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="Jerk"
                                                                                >
                                                                                                    Jerk
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="Long Cycle"
                                                                                >
                                                                                                    Long Cycle
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="Snatch"
                                                                                >
                                                                                                    Snatch
                                                                                </option>
                                                            </select>
                                        </div>
                                        <div
                                                            class="addEvent__dropdownContainer"
                                        >
                                                            <label
                                                                                class="addEvent__label"
                                                            >
                                                                                Event Duration:
                                                            </label>
                                                            <select
                                                                                class="addEvent__durationDropdown"
                                                            >
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value=""
                                                                                >
                                                                                                    Select
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="5min"
                                                                                >
                                                                                                    5 Minutes
                                                                                </option>
                                                                                <option
                                                                                                    class="addEvent__typeOption"
                                                                                                    value="10min"
                                                                                >
                                                                                                    10 Minutes
                                                                                </option>
                                                            </select>
                                        </div>
                                        <div
                                                            class="addEvent__buttonContainer"
                                        >
                                                            <button>
                                                                                Add Event
                                                            </button>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="addEvent__container"
                  >
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Type:
                                                      </label>
                                                      <select
                                                                        class="addEvent__typeDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Jerk"
                                                                        >
                                                                                          Jerk
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Long Cycle"
                                                                        >
                                                                                          Long Cycle
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="Snatch"
                                                                        >
                                                                                          Snatch
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__dropdownContainer"
                                    >
                                                      <label
                                                                        class="addEvent__label"
                                                      >
                                                                        Event Duration:
                                                      </label>
                                                      <select
                                                                        class="addEvent__durationDropdown"
                                                      >
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value=""
                                                                        >
                                                                                          Select
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="5min"
                                                                        >
                                                                                          5 Minutes
                                                                        </option>
                                                                        <option
                                                                                          class="addEvent__typeOption"
                                                                                          value="10min"
                                                                        >
                                                                                          10 Minutes
                                                                        </option>
                                                      </select>
                                    </div>
                                    <div
                                                      class="addEvent__buttonContainer"
                                    >
                                                      <button>
                                                                        Add Event
                                                      </button>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "addEvent": [Function],
        "close": [Function],
        "context": Object {},
        "handleDurationChange": [Function],
        "handleTypeChange": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "duration": null,
          "type": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="addEvent__container"
>
          <div
                    class="addEvent__dropdownContainer"
          >
                    <label
                              class="addEvent__label"
                    >
                              Event Type:
                    </label>
                    <select
                              class="addEvent__typeDropdown"
                    >
                              <option
                                        class="addEvent__typeOption"
                                        value=""
                              >
                                        Select
                              </option>
                              <option
                                        class="addEvent__typeOption"
                                        value="Jerk"
                              >
                                        Jerk
                              </option>
                              <option
                                        class="addEvent__typeOption"
                                        value="Long Cycle"
                              >
                                        Long Cycle
                              </option>
                              <option
                                        class="addEvent__typeOption"
                                        value="Snatch"
                              >
                                        Snatch
                              </option>
                    </select>
          </div>
          <div
                    class="addEvent__dropdownContainer"
          >
                    <label
                              class="addEvent__label"
                    >
                              Event Duration:
                    </label>
                    <select
                              class="addEvent__durationDropdown"
                    >
                              <option
                                        class="addEvent__typeOption"
                                        value=""
                              >
                                        Select
                              </option>
                              <option
                                        class="addEvent__typeOption"
                                        value="5min"
                              >
                                        5 Minutes
                              </option>
                              <option
                                        class="addEvent__typeOption"
                                        value="10min"
                              >
                                        10 Minutes
                              </option>
                    </select>
          </div>
          <div
                    class="addEvent__buttonContainer"
          >
                    <button>
                              Add Event
                    </button>
          </div>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="addEvent__dropdownContainer"
>
              <label
                            className="addEvent__label"
              >
                            Event Type:
              </label>
              <select
                            className="addEvent__typeDropdown"
                            onChange={[Function]}
              >
                            <option
                                          className="addEvent__typeOption"
                                          value=""
                            >
                                          Select
                            </option>
                            <option
                                          className="addEvent__typeOption"
                                          value="Jerk"
                            >
                                          Jerk
                            </option>
                            <option
                                          className="addEvent__typeOption"
                                          value="Long Cycle"
                            >
                                          Long Cycle
                            </option>
                            <option
                                          className="addEvent__typeOption"
                                          value="Snatch"
                            >
                                          Snatch
                            </option>
              </select>
</div>,
            <div
              className="addEvent__dropdownContainer"
>
              <label
                            className="addEvent__label"
              >
                            Event Duration:
              </label>
              <select
                            className="addEvent__durationDropdown"
                            onChange={[Function]}
              >
                            <option
                                          className="addEvent__typeOption"
                                          value=""
                            >
                                          Select
                            </option>
                            <option
                                          className="addEvent__typeOption"
                                          value="5min"
                            >
                                          5 Minutes
                            </option>
                            <option
                                          className="addEvent__typeOption"
                                          value="10min"
                            >
                                          10 Minutes
                            </option>
              </select>
</div>,
            <div
              className="addEvent__buttonContainer"
>
              <button
                            onClick={[Function]}
              >
                            Add Event
              </button>
</div>,
          ],
          "className": "addEvent__container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="addEvent__dropdownContainer"
>
              <label
                            class="addEvent__label"
              >
                            Event Type:
              </label>
              <select
                            class="addEvent__typeDropdown"
              >
                            <option
                                          class="addEvent__typeOption"
                                          value=""
                            >
                                          Select
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="Jerk"
                            >
                                          Jerk
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="Long Cycle"
                            >
                                          Long Cycle
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="Snatch"
                            >
                                          Snatch
                            </option>
              </select>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="addEvent__label"
>
                  Event Type:
</label>,
                <select
                  className="addEvent__typeDropdown"
                  onChange={[Function]}
>
                  <option
                                    className="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Jerk"
                  >
                                    Jerk
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Long Cycle"
                  >
                                    Long Cycle
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="Snatch"
                  >
                                    Snatch
                  </option>
</select>,
              ],
              "className": "addEvent__dropdownContainer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <label
                  class="addEvent__label"
>
                  Event Type:
</label>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Event Type:",
                  "className": "addEvent__label",
                },
                "ref": null,
                "rendered": Array [
                  "Event Type:",
                ],
                "type": "label",
              },
              Object {
                "instance": <select
                  class="addEvent__typeDropdown"
>
                  <option
                                    class="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="Jerk"
                  >
                                    Jerk
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="Long Cycle"
                  >
                                    Long Cycle
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="Snatch"
                  >
                                    Snatch
                  </option>
</select>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      className="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Jerk"
>
                      Jerk
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Long Cycle"
>
                      Long Cycle
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="Snatch"
>
                      Snatch
</option>,
                  ],
                  "className": "addEvent__typeDropdown",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Select",
                      "className": "addEvent__typeOption",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Select",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value="Jerk"
>
                      Jerk
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Jerk",
                      "className": "addEvent__typeOption",
                      "value": "Jerk",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Jerk",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value="Long Cycle"
>
                      Long Cycle
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Long Cycle",
                      "className": "addEvent__typeOption",
                      "value": "Long Cycle",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Long Cycle",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value="Snatch"
>
                      Snatch
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Snatch",
                      "className": "addEvent__typeOption",
                      "value": "Snatch",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Snatch",
                    ],
                    "type": "option",
                  },
                ],
                "type": "select",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div
              class="addEvent__dropdownContainer"
>
              <label
                            class="addEvent__label"
              >
                            Event Duration:
              </label>
              <select
                            class="addEvent__durationDropdown"
              >
                            <option
                                          class="addEvent__typeOption"
                                          value=""
                            >
                                          Select
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="5min"
                            >
                                          5 Minutes
                            </option>
                            <option
                                          class="addEvent__typeOption"
                                          value="10min"
                            >
                                          10 Minutes
                            </option>
              </select>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="addEvent__label"
>
                  Event Duration:
</label>,
                <select
                  className="addEvent__durationDropdown"
                  onChange={[Function]}
>
                  <option
                                    className="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="5min"
                  >
                                    5 Minutes
                  </option>
                  <option
                                    className="addEvent__typeOption"
                                    value="10min"
                  >
                                    10 Minutes
                  </option>
</select>,
              ],
              "className": "addEvent__dropdownContainer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <label
                  class="addEvent__label"
>
                  Event Duration:
</label>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Event Duration:",
                  "className": "addEvent__label",
                },
                "ref": null,
                "rendered": Array [
                  "Event Duration:",
                ],
                "type": "label",
              },
              Object {
                "instance": <select
                  class="addEvent__durationDropdown"
>
                  <option
                                    class="addEvent__typeOption"
                                    value=""
                  >
                                    Select
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="5min"
                  >
                                    5 Minutes
                  </option>
                  <option
                                    class="addEvent__typeOption"
                                    value="10min"
                  >
                                    10 Minutes
                  </option>
</select>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      className="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="5min"
>
                      5 Minutes
</option>,
                    <option
                      className="addEvent__typeOption"
                      value="10min"
>
                      10 Minutes
</option>,
                  ],
                  "className": "addEvent__durationDropdown",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value=""
>
                      Select
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Select",
                      "className": "addEvent__typeOption",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Select",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value="5min"
>
                      5 Minutes
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "5 Minutes",
                      "className": "addEvent__typeOption",
                      "value": "5min",
                    },
                    "ref": null,
                    "rendered": Array [
                      "5 Minutes",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      class="addEvent__typeOption"
                      value="10min"
>
                      10 Minutes
</option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "10 Minutes",
                      "className": "addEvent__typeOption",
                      "value": "10min",
                    },
                    "ref": null,
                    "rendered": Array [
                      "10 Minutes",
                    ],
                    "type": "option",
                  },
                ],
                "type": "select",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div
              class="addEvent__buttonContainer"
>
              <button>
                            Add Event
              </button>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                onClick={[Function]}
>
                Add Event
</button>,
              "className": "addEvent__buttonContainer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <button>
                  Add Event
</button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Event",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  "Add Event",
                ],
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
